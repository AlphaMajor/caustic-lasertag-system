/*
 * miles-tag-2.hpp
 *
 *  Created on: 05 нояб. 2014 г.
 *      Author: alexey
 */

#ifndef LAZERTAG_RIFLE_INCLUDE_MILES_TAG_2_HPP_
#define LAZERTAG_RIFLE_INCLUDE_MILES_TAG_2_HPP_

#include <stdint.h>

#define MILESTAG2_MAX_MESSAGE_LENGTH    40

using MilesTag2ShotCallback = void (*) (void* object, unsigned int teamId, unsigned int playerId, unsigned int damage);

class IMilesTag2Transmitter
{
public:
	virtual void init();
	virtual void setPlayerId(uint8_t playerId);
	virtual void setTeamId(uint8_t teamId);

	// Standard commands
	virtual void shot(uint8_t damage);
	virtual void addHealth(uint8_t value);
	virtual void addRounds(uint8_t value);
	virtual void adminKill();
	virtual void pauseOrUnpause();
	virtual void startGame();
	virtual void restoreDefaults();
	virtual void respawn();
	virtual void newGameImmediate();
	virtual void fullAmmo();
	virtual void endGame();
	virtual void resetClock();
	virtual void initializePlayer();
	virtual void explodePlayer();
	virtual void newGameReady();
	virtual void fullHealth();
	virtual void fullArmor();
	virtual void clearScores();
	virtual void testSensors();
	virtual void stunPlayer();
	virtual void disarmPlayer();

	virtual void ammoPickup(uint8_t ammoBoxId);     // 0x00-0x0F
	virtual void healthPickup(uint8_t healthBoxId); // 0x00-0x0F
	virtual void flagPickup(uint8_t flagBoxId);     // 0x00-0x0F
};

class IMilesTag2Receiver
{
public:
    virtual ~IMilesTag2Receiver() {}
    virtual void setShortMessageCallback(MilesTag2ShotCallback callback, void* object) = 0;
    virtual void interrogate() = 0;
    virtual void init(unsigned int channel) = 0;
    virtual void interruptionHandler() = 0;

    virtual void enableDebug(bool debug) = 0;
};

class MilesTag2ReceiverBase : public IMilesTag2Receiver
{
public:
	MilesTag2ReceiverBase();
    virtual ~MilesTag2ReceiverBase() {}
    void setShortMessageCallback(MilesTag2ShotCallback callback, void* object);
    virtual void interrogate()  = 0;
    virtual void init(unsigned int channel)  = 0;
    virtual void interruptionHandler() = 0;

    virtual void enableDebug(bool debug) = 0;

protected:
    MilesTag2ShotCallback m_shotCallback;
	void* m_shotObject;
};



class MilesTag2Receiver : public MilesTag2ReceiverBase
{
public:
    MilesTag2Receiver();
    //void setShortMessageCallback(MilesTag2ShotCallback callback, void* object);
    void interrogate();
    void init(unsigned int channel);
    void interruptionHandler();

    void enableDebug(bool debug);

private:
    enum ReceivingState
    {
        RS_WAITING_HEADER = 0,
        RS_HEADER_BEGINNED = 1,
        RS_SPACE = 2,
        RS_BIT = 3
    };

    uint8_t decodeDamage(uint8_t damage);
    void saveBit(bool value);
    void resetReceiverBuffer();
    bool isCorrect(unsigned int value, unsigned int min, unsigned int max);
    int getCurrentLength();

    bool getBit(unsigned int n);
    void parseAndCallShot();
    unsigned int m_channel;
    ReceivingState m_state;
    unsigned int m_lastTime;
    bool m_falseImpulse;
    bool m_dataReady;
    bool m_debug;
/*
    MilesTag2ShotCallback m_shotCallback;
    void* m_shotObject;*/

    uint8_t m_data[MILESTAG2_MAX_MESSAGE_LENGTH];
    uint8_t *m_pCurrentByte;
    uint8_t m_currentBit;
};


extern IMilesTag2Transmitter* milesTag2;
extern MilesTag2Receiver milesTag2Receiver;



#endif /* LAZERTAG_RIFLE_INCLUDE_MILES_TAG_2_HPP_ */
