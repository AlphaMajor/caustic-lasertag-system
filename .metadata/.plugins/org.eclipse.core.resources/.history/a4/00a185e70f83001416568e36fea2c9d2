/*
 * miles-tag-2-base.hpp
 *
 *  Created on: 14 дек. 2014 г.
 *      Author: alexey
 */

#ifndef LAZERTAG_DEVICE_INCLUDE_HAL_MILES_TAG_2_BASE_HPP_
#define LAZERTAG_DEVICE_INCLUDE_HAL_MILES_TAG_2_BASE_HPP_



class MilesTag2TransmitterBase
{
public:
    MilesTag2TransmitterBase();
    void init();
    void setPlayerId(uint8_t playerId);
    void setTeamId(uint8_t teamId);

    // Standard commands
    void shot(uint8_t damage);
    void addHealth(uint8_t value);
    void addRounds(uint8_t value);
    void adminKill();
    void pauseOrUnpause();
    void startGame();
    void restoreDefaults();
    void respawn();
    void newGameImmediate();
    void fullAmmo();
    void endGame();
    void resetClock();
    void initializePlayer();
    void explodePlayer();
    void newGameReady();
    void fullHealth();
    void fullArmor();
    void clearScores();
    void testSensors();
    void stunPlayer();
    void disarmPlayer();

    void ammoPickup(uint8_t ammoBoxId);     // 0x00-0x0F
    void healthPickup(uint8_t healthBoxId); // 0x00-0x0F
    void flagPickup(uint8_t flagBoxId);     // 0x00-0x0F

protected:
    bool nextBit();
    void cursorToStart();
    virtual void beginTransmission() = 0;
    uint8_t *m_pCurrentByte;
    uint8_t m_currentBit;
    uint8_t m_data[MILESTAG2_MAX_MESSAGE_LENGTH];

    unsigned int m_currentLength;
    bool m_sendingHeader;
    unsigned int m_length;

private:
    void sendCommand(uint8_t commandCode);
    uint8_t encodeDamage(uint8_t damage);
    uint8_t m_playerId;
    uint8_t m_teamId;
};






#endif /* LAZERTAG_DEVICE_INCLUDE_HAL_MILES_TAG_2_BASE_HPP_ */
